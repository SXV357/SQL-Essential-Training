-- SQLite

/**
    ERD(entity relationship diagram)
    The columns in each table are referred to as keys and 2 types are there:
    1. primary key
    2. foreign key

    when a primary key and foreign key are connected(the same column), it says that for each value of the primary key there could be many entries corresponding to it in the table where the same column is a foreign key
    ex: the CustomerID field is common to both the Invoice and Customer tables. CustomerID is the primary key in the Customer table and CustomerID is a foreign key in the Invoice table and since they're connected, it suggests that one customer could have many invoices.

    Normalization - process of spreading keys across multiple tables(keeps size of database small and helps with making query execution faster since there's no need to store everything in one big table)
*/

-- aliasing both tables below to save time typing

SELECT
    -- selecting all fields common to both tables: *
    -- since we've aliased the tables we can just target the columns as such
    c.LastName,
    c.FirstName,
    i.InvoiceId,
    i.CustomerID,
    i.InvoiceDate,
    i.Total
FROM    
    Invoice AS i
INNER JOIN
    -- provide the name of the other table to join to
    Customer AS c
ON
    -- provide the common link between both tables
    i.CustomerID = c.CustomerID

-- done to actually view the invoices generated by each customer and how many
ORDER BY
    -- could also put i.customerID here and would work just fine
    c.customerID